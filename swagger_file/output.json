swagger: '2.0'
info:
  title: Storage Management API
  description: API for managing storage, products, suppliers, warehouses, and users
  termsOfService: https://www.example.com/terms/
  contact:
    email: contact@example.com
  license:
    name: BSD License
  version: v1
host: 127.0.0.1:8000
schemes:
- http
basePath: /
consumes:
- application/json
produces:
- application/json
securityDefinitions:
  Basic:
    type: basic
security:
- Basic: []
paths:
  /account/address/:
    get:
      operationId: account_address_list
      description: List all addresses for the authenticated user
      parameters: []
      responses:
        '200':
          description: ''
          schema:
            type: array
            items:
              $ref: '#/definitions/Address'
      tags:
      - account
    post:
      operationId: account_address_create
      description: Create a new address for the authenticated user
      parameters:
      - name: data
        in: body
        required: true
        schema:
          $ref: '#/definitions/Address'
      responses:
        '201':
          description: ''
          schema:
            $ref: '#/definitions/Address'
      tags:
      - account
    parameters: []
  /account/address/{id}/:
    get:
      operationId: account_address_read
      description: Retrieve a specific address for the authenticated user
      parameters: []
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/Address'
      tags:
      - account
    put:
      operationId: account_address_update
      description: Fully update a specific address for the authenticated user
      parameters:
      - name: data
        in: body
        required: true
        schema:
          $ref: '#/definitions/Address'
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/Address'
      tags:
      - account
    patch:
      operationId: account_address_partial_update
      description: Partially update a specific address for the authenticated user
      parameters:
      - name: data
        in: body
        required: true
        schema:
          $ref: '#/definitions/Address'
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/Address'
      tags:
      - account
    delete:
      operationId: account_address_delete
      description: Delete a specific address for the authenticated user
      parameters: []
      responses:
        '204':
          description: No content - address deleted successfully
      tags:
      - account
    parameters:
    - name: id
      in: path
      description: A unique integer value identifying this address.
      required: true
      type: integer
  /account/delete_profile/:
    get:
      operationId: account_delete_profile_list
      description: Get the authenticated user's profile
      parameters: []
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/UserProfile'
      tags:
      - account
    put:
      operationId: account_delete_profile_update
      description: Fully update the authenticated user's profile
      parameters:
      - name: data
        in: body
        required: true
        schema:
          $ref: '#/definitions/UserProfile'
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/UserProfile'
      tags:
      - account
    patch:
      operationId: account_delete_profile_partial_update
      description: Partially update the authenticated user's profile
      parameters:
      - name: data
        in: body
        required: true
        schema:
          $ref: '#/definitions/UserProfile'
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/UserProfile'
      tags:
      - account
    delete:
      operationId: account_delete_profile_delete
      description: Deactivate the authenticated user's account
      parameters: []
      responses:
        '204':
          description: No content - user deactivated successfully
          examples:
            application/json:
              detail: User deactivated successfully.
      tags:
      - account
    parameters: []
  /account/edit_profile/:
    get:
      operationId: account_edit_profile_list
      description: Get the authenticated user's profile
      parameters: []
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/UserProfile'
      tags:
      - account
    put:
      operationId: account_edit_profile_update
      description: Fully update the authenticated user's profile
      parameters:
      - name: data
        in: body
        required: true
        schema:
          $ref: '#/definitions/UserProfile'
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/UserProfile'
      tags:
      - account
    patch:
      operationId: account_edit_profile_partial_update
      description: Partially update the authenticated user's profile
      parameters:
      - name: data
        in: body
        required: true
        schema:
          $ref: '#/definitions/UserProfile'
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/UserProfile'
      tags:
      - account
    delete:
      operationId: account_edit_profile_delete
      description: Deactivate the authenticated user's account
      parameters: []
      responses:
        '204':
          description: No content - user deactivated successfully
          examples:
            application/json:
              detail: User deactivated successfully.
      tags:
      - account
    parameters: []
  /account/login/:
    post:
      operationId: account_login_create
      description: Login with email and password
      parameters:
      - name: data
        in: body
        required: true
        schema:
          $ref: '#/definitions/Login'
      responses:
        '200':
          description: OK - login successful
          examples:
            application/json:
              access: access_token_example
              refresh: refresh_token_example
        '400':
          description: Bad request - invalid data
        '401':
          description: Unauthorized - invalid credentials
        '500':
          description: Internal server error
      tags:
      - account
    parameters: []
  /account/logout/:
    post:
      operationId: account_logout_create
      description: Logout by blacklisting the refresh token
      parameters:
      - name: data
        in: body
        required: true
        schema:
          required:
          - refresh_token
          type: object
          properties:
            refresh_token:
              description: Refresh token to blacklist
              type: string
      responses:
        '200':
          description: OK - logout successful
          examples:
            application/json:
              msg: Successfully logged out
        '400':
          description: Bad request
          examples:
            application/json:
              msg: Refresh token is required
      tags:
      - account
    parameters: []
  /account/profile/:
    get:
      operationId: account_profile_list
      description: Get the authenticated user's profile
      parameters: []
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/UserProfile'
      tags:
      - account
    put:
      operationId: account_profile_update
      description: Fully update the authenticated user's profile
      parameters:
      - name: data
        in: body
        required: true
        schema:
          $ref: '#/definitions/UserProfile'
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/UserProfile'
      tags:
      - account
    patch:
      operationId: account_profile_partial_update
      description: Partially update the authenticated user's profile
      parameters:
      - name: data
        in: body
        required: true
        schema:
          $ref: '#/definitions/UserProfile'
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/UserProfile'
      tags:
      - account
    delete:
      operationId: account_profile_delete
      description: Deactivate the authenticated user's account
      parameters: []
      responses:
        '204':
          description: No content - user deactivated successfully
          examples:
            application/json:
              detail: User deactivated successfully.
      tags:
      - account
    parameters: []
  /account/refresh/:
    post:
      operationId: account_refresh_create
      description: Refresh access token using refresh token
      parameters:
      - name: data
        in: body
        required: true
        schema:
          required:
          - refresh
          type: object
          properties:
            refresh:
              description: Refresh token
              type: string
      responses:
        '200':
          description: OK - token refreshed successfully
          examples:
            application/json:
              access: new_access_token_example
        '400':
          description: Bad request - refresh token not provided
        '401':
          description: Unauthorized - invalid refresh token
        '500':
          description: Internal server error
      tags:
      - account
    parameters: []
  /account/register/:
    post:
      operationId: account_register_create
      description: Register a new user
      parameters:
      - name: data
        in: body
        required: true
        schema:
          $ref: '#/definitions/Register'
      responses:
        '201':
          description: Created - user registered successfully
          examples:
            application/json:
              message: User created successfully
        '400':
          description: Bad request - invalid data
        '500':
          description: Internal server error
      tags:
      - account
    parameters: []
  /account/validate_jwt/:
    get:
      operationId: account_validate_jwt_list
      description: Validate JWT token
      parameters: []
      responses:
        '200':
          description: OK - token is valid
          examples:
            application/json:
              message: Token is valid
        '401':
          description: Unauthorized - invalid token
        '500':
          description: Internal server error
      tags:
      - account
    parameters: []
  /products/categories/:
    get:
      operationId: products_categories_list
      summary: ViewSet for managing product categories.
      description: Provides CRUD operations for Category objects.
      parameters: []
      responses:
        '200':
          description: ''
          schema:
            type: array
            items:
              $ref: '#/definitions/Category'
      tags:
      - products
    post:
      operationId: products_categories_create
      summary: ViewSet for managing product categories.
      description: Provides CRUD operations for Category objects.
      parameters:
      - name: data
        in: body
        required: true
        schema:
          $ref: '#/definitions/Category'
      responses:
        '201':
          description: ''
          schema:
            $ref: '#/definitions/Category'
      tags:
      - products
    parameters: []
  /products/categories/{name}/:
    get:
      operationId: products_categories_read
      summary: ViewSet for managing product categories.
      description: Provides CRUD operations for Category objects.
      parameters: []
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/Category'
      tags:
      - products
    put:
      operationId: products_categories_update
      summary: ViewSet for managing product categories.
      description: Provides CRUD operations for Category objects.
      parameters:
      - name: data
        in: body
        required: true
        schema:
          $ref: '#/definitions/Category'
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/Category'
      tags:
      - products
    patch:
      operationId: products_categories_partial_update
      summary: ViewSet for managing product categories.
      description: Provides CRUD operations for Category objects.
      parameters:
      - name: data
        in: body
        required: true
        schema:
          $ref: '#/definitions/Category'
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/Category'
      tags:
      - products
    delete:
      operationId: products_categories_delete
      summary: ViewSet for managing product categories.
      description: Provides CRUD operations for Category objects.
      parameters: []
      responses:
        '204':
          description: ''
      tags:
      - products
    parameters:
    - name: name
      in: path
      description: A unique value identifying this category.
      required: true
      type: string
  /products/colors/:
    get:
      operationId: products_colors_list
      summary: ViewSet for managing product colors.
      description: Provides CRUD operations for Color objects.
      parameters: []
      responses:
        '200':
          description: ''
          schema:
            type: array
            items:
              $ref: '#/definitions/Color'
      tags:
      - products
    post:
      operationId: products_colors_create
      summary: ViewSet for managing product colors.
      description: Provides CRUD operations for Color objects.
      parameters:
      - name: data
        in: body
        required: true
        schema:
          $ref: '#/definitions/Color'
      responses:
        '201':
          description: ''
          schema:
            $ref: '#/definitions/Color'
      tags:
      - products
    parameters: []
  /products/colors/{name}/:
    get:
      operationId: products_colors_read
      summary: ViewSet for managing product colors.
      description: Provides CRUD operations for Color objects.
      parameters: []
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/Color'
      tags:
      - products
    put:
      operationId: products_colors_update
      summary: ViewSet for managing product colors.
      description: Provides CRUD operations for Color objects.
      parameters:
      - name: data
        in: body
        required: true
        schema:
          $ref: '#/definitions/Color'
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/Color'
      tags:
      - products
    patch:
      operationId: products_colors_partial_update
      summary: ViewSet for managing product colors.
      description: Provides CRUD operations for Color objects.
      parameters:
      - name: data
        in: body
        required: true
        schema:
          $ref: '#/definitions/Color'
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/Color'
      tags:
      - products
    delete:
      operationId: products_colors_delete
      summary: ViewSet for managing product colors.
      description: Provides CRUD operations for Color objects.
      parameters: []
      responses:
        '204':
          description: ''
      tags:
      - products
    parameters:
    - name: name
      in: path
      description: A unique value identifying this color.
      required: true
      type: string
  /products/create_comment/{product_name}/:
    get:
      operationId: products_create_comment_read
      summary: View for managing product comments.
      description: Provides operations to list, create, and delete comments for a
        specific product.
      parameters: []
      responses:
        '200':
          description: ''
          schema:
            type: array
            items:
              $ref: '#/definitions/Comment'
      tags:
      - products
    post:
      operationId: products_create_comment_create
      summary: View for managing product comments.
      description: Provides operations to list, create, and delete comments for a
        specific product.
      parameters:
      - name: data
        in: body
        required: true
        schema:
          $ref: '#/definitions/Comment'
      responses:
        '201':
          description: ''
          schema:
            $ref: '#/definitions/Comment'
      tags:
      - products
    delete:
      operationId: products_create_comment_delete
      description: Delete a comment for a specific product
      parameters:
      - name: data
        in: body
        required: true
        schema:
          required:
          - comment_id
          type: object
          properties:
            comment_id:
              description: ID of the comment to delete
              type: integer
      responses:
        '204':
          description: No content - comment deleted successfully
        '404':
          description: Not found - comment does not exist or user is not the owner
      tags:
      - products
    parameters:
    - name: product_name
      in: path
      required: true
      type: string
  /products/delete_comment/{product_name}/:
    get:
      operationId: products_delete_comment_read
      summary: View for managing product comments.
      description: Provides operations to list, create, and delete comments for a
        specific product.
      parameters: []
      responses:
        '200':
          description: ''
          schema:
            type: array
            items:
              $ref: '#/definitions/Comment'
      tags:
      - products
    post:
      operationId: products_delete_comment_create
      summary: View for managing product comments.
      description: Provides operations to list, create, and delete comments for a
        specific product.
      parameters:
      - name: data
        in: body
        required: true
        schema:
          $ref: '#/definitions/Comment'
      responses:
        '201':
          description: ''
          schema:
            $ref: '#/definitions/Comment'
      tags:
      - products
    delete:
      operationId: products_delete_comment_delete
      description: Delete a comment for a specific product
      parameters:
      - name: data
        in: body
        required: true
        schema:
          required:
          - comment_id
          type: object
          properties:
            comment_id:
              description: ID of the comment to delete
              type: integer
      responses:
        '204':
          description: No content - comment deleted successfully
        '404':
          description: Not found - comment does not exist or user is not the owner
      tags:
      - products
    parameters:
    - name: product_name
      in: path
      required: true
      type: string
  /products/get_comment/{product_name}/:
    get:
      operationId: products_get_comment_read
      summary: View for managing product comments.
      description: Provides operations to list, create, and delete comments for a
        specific product.
      parameters: []
      responses:
        '200':
          description: ''
          schema:
            type: array
            items:
              $ref: '#/definitions/Comment'
      tags:
      - products
    post:
      operationId: products_get_comment_create
      summary: View for managing product comments.
      description: Provides operations to list, create, and delete comments for a
        specific product.
      parameters:
      - name: data
        in: body
        required: true
        schema:
          $ref: '#/definitions/Comment'
      responses:
        '201':
          description: ''
          schema:
            $ref: '#/definitions/Comment'
      tags:
      - products
    delete:
      operationId: products_get_comment_delete
      description: Delete a comment for a specific product
      parameters:
      - name: data
        in: body
        required: true
        schema:
          required:
          - comment_id
          type: object
          properties:
            comment_id:
              description: ID of the comment to delete
              type: integer
      responses:
        '204':
          description: No content - comment deleted successfully
        '404':
          description: Not found - comment does not exist or user is not the owner
      tags:
      - products
    parameters:
    - name: product_name
      in: path
      required: true
      type: string
  /products/products/:
    get:
      operationId: products_products_list
      summary: ViewSet for managing products.
      description: Provides CRUD operations for Product objects.
      parameters: []
      responses:
        '200':
          description: ''
          schema:
            type: array
            items:
              $ref: '#/definitions/Product'
      tags:
      - products
    post:
      operationId: products_products_create
      summary: ViewSet for managing products.
      description: Provides CRUD operations for Product objects.
      parameters:
      - name: data
        in: body
        required: true
        schema:
          $ref: '#/definitions/Product'
      responses:
        '201':
          description: ''
          schema:
            $ref: '#/definitions/Product'
      tags:
      - products
    parameters: []
  /products/products/{name}/:
    get:
      operationId: products_products_read
      summary: ViewSet for managing products.
      description: Provides CRUD operations for Product objects.
      parameters: []
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/Product'
      tags:
      - products
    put:
      operationId: products_products_update
      summary: ViewSet for managing products.
      description: Provides CRUD operations for Product objects.
      parameters:
      - name: data
        in: body
        required: true
        schema:
          $ref: '#/definitions/Product'
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/Product'
      tags:
      - products
    patch:
      operationId: products_products_partial_update
      summary: ViewSet for managing products.
      description: Provides CRUD operations for Product objects.
      parameters:
      - name: data
        in: body
        required: true
        schema:
          $ref: '#/definitions/Product'
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/Product'
      tags:
      - products
    delete:
      operationId: products_products_delete
      summary: ViewSet for managing products.
      description: Provides CRUD operations for Product objects.
      parameters: []
      responses:
        '204':
          description: ''
      tags:
      - products
    parameters:
    - name: name
      in: path
      description: A unique value identifying this product.
      required: true
      type: string
  /products/sizes/:
    get:
      operationId: products_sizes_list
      summary: ViewSet for managing product sizes.
      description: Provides CRUD operations for Size objects.
      parameters: []
      responses:
        '200':
          description: ''
          schema:
            type: array
            items:
              $ref: '#/definitions/Size'
      tags:
      - products
    post:
      operationId: products_sizes_create
      summary: ViewSet for managing product sizes.
      description: Provides CRUD operations for Size objects.
      parameters:
      - name: data
        in: body
        required: true
        schema:
          $ref: '#/definitions/Size'
      responses:
        '201':
          description: ''
          schema:
            $ref: '#/definitions/Size'
      tags:
      - products
    parameters: []
  /products/sizes/{name}/:
    get:
      operationId: products_sizes_read
      summary: ViewSet for managing product sizes.
      description: Provides CRUD operations for Size objects.
      parameters: []
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/Size'
      tags:
      - products
    put:
      operationId: products_sizes_update
      summary: ViewSet for managing product sizes.
      description: Provides CRUD operations for Size objects.
      parameters:
      - name: data
        in: body
        required: true
        schema:
          $ref: '#/definitions/Size'
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/Size'
      tags:
      - products
    patch:
      operationId: products_sizes_partial_update
      summary: ViewSet for managing product sizes.
      description: Provides CRUD operations for Size objects.
      parameters:
      - name: data
        in: body
        required: true
        schema:
          $ref: '#/definitions/Size'
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/Size'
      tags:
      - products
    delete:
      operationId: products_sizes_delete
      summary: ViewSet for managing product sizes.
      description: Provides CRUD operations for Size objects.
      parameters: []
      responses:
        '204':
          description: ''
      tags:
      - products
    parameters:
    - name: name
      in: path
      description: A unique value identifying this size.
      required: true
      type: string
  /suppliers/categories/:
    get:
      operationId: suppliers_categories_list
      description: List all supplier categories
      parameters: []
      responses:
        '200':
          description: ''
          schema:
            type: array
            items:
              $ref: '#/definitions/CategorySupplier'
      tags:
      - suppliers
    post:
      operationId: suppliers_categories_create
      description: Create a new supplier category
      parameters:
      - name: data
        in: body
        required: true
        schema:
          $ref: '#/definitions/CategorySupplier'
      responses:
        '201':
          description: ''
          schema:
            $ref: '#/definitions/CategorySupplier'
      tags:
      - suppliers
    parameters: []
  /suppliers/categories/{name}/:
    get:
      operationId: suppliers_categories_read
      description: Retrieve a specific supplier category
      parameters: []
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/CategorySupplier'
      tags:
      - suppliers
    put:
      operationId: suppliers_categories_update
      description: Fully update a specific supplier category
      parameters:
      - name: data
        in: body
        required: true
        schema:
          $ref: '#/definitions/CategorySupplier'
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/CategorySupplier'
      tags:
      - suppliers
    patch:
      operationId: suppliers_categories_partial_update
      description: Partially update a specific supplier category
      parameters:
      - name: data
        in: body
        required: true
        schema:
          $ref: '#/definitions/CategorySupplier'
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/CategorySupplier'
      tags:
      - suppliers
    delete:
      operationId: suppliers_categories_delete
      description: Delete a specific supplier category
      parameters: []
      responses:
        '204':
          description: No content - category deleted successfully
      tags:
      - suppliers
    parameters:
    - name: name
      in: path
      description: A unique value identifying this category supplier.
      required: true
      type: string
  /suppliers/colors/:
    get:
      operationId: suppliers_colors_list
      description: List all supplier colors
      parameters: []
      responses:
        '200':
          description: ''
          schema:
            type: array
            items:
              $ref: '#/definitions/ColorSupplier'
      tags:
      - suppliers
    post:
      operationId: suppliers_colors_create
      description: Create a new supplier color
      parameters:
      - name: data
        in: body
        required: true
        schema:
          $ref: '#/definitions/ColorSupplier'
      responses:
        '201':
          description: ''
          schema:
            $ref: '#/definitions/ColorSupplier'
      tags:
      - suppliers
    parameters: []
  /suppliers/colors/{name}/:
    get:
      operationId: suppliers_colors_read
      description: Retrieve a specific supplier color
      parameters: []
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/ColorSupplier'
      tags:
      - suppliers
    put:
      operationId: suppliers_colors_update
      description: Fully update a specific supplier color
      parameters:
      - name: data
        in: body
        required: true
        schema:
          $ref: '#/definitions/ColorSupplier'
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/ColorSupplier'
      tags:
      - suppliers
    patch:
      operationId: suppliers_colors_partial_update
      description: Partially update a specific supplier color
      parameters:
      - name: data
        in: body
        required: true
        schema:
          $ref: '#/definitions/ColorSupplier'
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/ColorSupplier'
      tags:
      - suppliers
    delete:
      operationId: suppliers_colors_delete
      description: Delete a specific supplier color
      parameters: []
      responses:
        '204':
          description: No content - color deleted successfully
      tags:
      - suppliers
    parameters:
    - name: name
      in: path
      description: A unique value identifying this color supplier.
      required: true
      type: string
  /suppliers/inventory/:
    get:
      operationId: suppliers_inventory_list
      description: |-
        ViewSet for managing supplier inventory.
        Provides CRUD operations for InventorySupplier objects.
      parameters: []
      responses:
        '200':
          description: ''
          schema:
            type: array
            items:
              $ref: '#/definitions/InventorySupplier'
      tags:
      - suppliers
    post:
      operationId: suppliers_inventory_create
      description: |-
        ViewSet for managing supplier inventory.
        Provides CRUD operations for InventorySupplier objects.
      parameters:
      - name: data
        in: body
        required: true
        schema:
          $ref: '#/definitions/InventorySupplier'
      responses:
        '201':
          description: ''
          schema:
            $ref: '#/definitions/InventorySupplier'
      tags:
      - suppliers
    parameters: []
  /suppliers/inventory/{id}/:
    get:
      operationId: suppliers_inventory_read
      description: |-
        ViewSet for managing supplier inventory.
        Provides CRUD operations for InventorySupplier objects.
      parameters: []
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/InventorySupplier'
      tags:
      - suppliers
    put:
      operationId: suppliers_inventory_update
      description: |-
        ViewSet for managing supplier inventory.
        Provides CRUD operations for InventorySupplier objects.
      parameters:
      - name: data
        in: body
        required: true
        schema:
          $ref: '#/definitions/InventorySupplier'
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/InventorySupplier'
      tags:
      - suppliers
    patch:
      operationId: suppliers_inventory_partial_update
      description: |-
        ViewSet for managing supplier inventory.
        Provides CRUD operations for InventorySupplier objects.
      parameters:
      - name: data
        in: body
        required: true
        schema:
          $ref: '#/definitions/InventorySupplier'
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/InventorySupplier'
      tags:
      - suppliers
    delete:
      operationId: suppliers_inventory_delete
      description: |-
        ViewSet for managing supplier inventory.
        Provides CRUD operations for InventorySupplier objects.
      parameters: []
      responses:
        '204':
          description: ''
      tags:
      - suppliers
    parameters:
    - name: id
      in: path
      description: A unique integer value identifying this inventory supplier.
      required: true
      type: integer
  /suppliers/products/:
    get:
      operationId: suppliers_products_list
      description: |-
        ViewSet for managing product details for suppliers.
        Provides CRUD operations for ProductDetailSupplier objects.
      parameters: []
      responses:
        '200':
          description: ''
          schema:
            type: array
            items:
              $ref: '#/definitions/ProductDetailSupplier'
      tags:
      - suppliers
    post:
      operationId: suppliers_products_create
      description: |-
        ViewSet for managing product details for suppliers.
        Provides CRUD operations for ProductDetailSupplier objects.
      parameters:
      - name: data
        in: body
        required: true
        schema:
          $ref: '#/definitions/ProductDetailSupplier'
      responses:
        '201':
          description: ''
          schema:
            $ref: '#/definitions/ProductDetailSupplier'
      tags:
      - suppliers
    parameters: []
  /suppliers/products/{name}/:
    get:
      operationId: suppliers_products_read
      description: |-
        ViewSet for managing product details for suppliers.
        Provides CRUD operations for ProductDetailSupplier objects.
      parameters: []
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/ProductDetailSupplier'
      tags:
      - suppliers
    put:
      operationId: suppliers_products_update
      description: |-
        ViewSet for managing product details for suppliers.
        Provides CRUD operations for ProductDetailSupplier objects.
      parameters:
      - name: data
        in: body
        required: true
        schema:
          $ref: '#/definitions/ProductDetailSupplier'
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/ProductDetailSupplier'
      tags:
      - suppliers
    patch:
      operationId: suppliers_products_partial_update
      description: |-
        ViewSet for managing product details for suppliers.
        Provides CRUD operations for ProductDetailSupplier objects.
      parameters:
      - name: data
        in: body
        required: true
        schema:
          $ref: '#/definitions/ProductDetailSupplier'
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/ProductDetailSupplier'
      tags:
      - suppliers
    delete:
      operationId: suppliers_products_delete
      description: |-
        ViewSet for managing product details for suppliers.
        Provides CRUD operations for ProductDetailSupplier objects.
      parameters: []
      responses:
        '204':
          description: ''
      tags:
      - suppliers
    parameters:
    - name: name
      in: path
      description: A unique value identifying this product detail supplier.
      required: true
      type: string
  /suppliers/sizes/:
    get:
      operationId: suppliers_sizes_list
      description: List all supplier sizes
      parameters: []
      responses:
        '200':
          description: ''
          schema:
            type: array
            items:
              $ref: '#/definitions/SizeSupplier'
      tags:
      - suppliers
    post:
      operationId: suppliers_sizes_create
      description: Create a new supplier size
      parameters:
      - name: data
        in: body
        required: true
        schema:
          $ref: '#/definitions/SizeSupplier'
      responses:
        '201':
          description: ''
          schema:
            $ref: '#/definitions/SizeSupplier'
      tags:
      - suppliers
    parameters: []
  /suppliers/sizes/{name}/:
    get:
      operationId: suppliers_sizes_read
      description: Retrieve a specific supplier size
      parameters: []
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/SizeSupplier'
      tags:
      - suppliers
    put:
      operationId: suppliers_sizes_update
      description: Fully update a specific supplier size
      parameters:
      - name: data
        in: body
        required: true
        schema:
          $ref: '#/definitions/SizeSupplier'
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/SizeSupplier'
      tags:
      - suppliers
    patch:
      operationId: suppliers_sizes_partial_update
      description: Partially update a specific supplier size
      parameters:
      - name: data
        in: body
        required: true
        schema:
          $ref: '#/definitions/SizeSupplier'
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/SizeSupplier'
      tags:
      - suppliers
    delete:
      operationId: suppliers_sizes_delete
      description: Delete a specific supplier size
      parameters: []
      responses:
        '204':
          description: No content - size deleted successfully
      tags:
      - suppliers
    parameters:
    - name: name
      in: path
      description: A unique value identifying this size supplier.
      required: true
      type: string
  /suppliers/suppliers/:
    get:
      operationId: suppliers_suppliers_list
      description: List all suppliers
      parameters: []
      responses:
        '200':
          description: ''
          schema:
            type: array
            items:
              $ref: '#/definitions/Supplier'
      tags:
      - suppliers
    post:
      operationId: suppliers_suppliers_create
      description: Create a new supplier
      parameters:
      - name: data
        in: body
        required: true
        schema:
          $ref: '#/definitions/Supplier'
      responses:
        '201':
          description: ''
          schema:
            $ref: '#/definitions/Supplier'
      tags:
      - suppliers
    parameters: []
  /suppliers/suppliers/{name}/:
    get:
      operationId: suppliers_suppliers_read
      description: Retrieve a specific supplier
      parameters: []
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/Supplier'
      tags:
      - suppliers
    put:
      operationId: suppliers_suppliers_update
      description: Fully update a specific supplier
      parameters:
      - name: data
        in: body
        required: true
        schema:
          $ref: '#/definitions/Supplier'
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/Supplier'
      tags:
      - suppliers
    patch:
      operationId: suppliers_suppliers_partial_update
      description: Partially update a specific supplier
      parameters:
      - name: data
        in: body
        required: true
        schema:
          $ref: '#/definitions/Supplier'
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/Supplier'
      tags:
      - suppliers
    delete:
      operationId: suppliers_suppliers_delete
      description: Delete a specific supplier
      parameters: []
      responses:
        '204':
          description: No content - supplier deleted successfully
      tags:
      - suppliers
    parameters:
    - name: name
      in: path
      description: A unique value identifying this supplier.
      required: true
      type: string
  /warehouses/apply_purchase_to_inventory/{order_id}:
    post:
      operationId: warehouses_apply_purchase_to_inventory_create
      description: API endpoint to apply a purchase order to inventory.
      parameters: []
      responses:
        '201':
          description: ''
      tags:
      - warehouses
    parameters:
    - name: order_id
      in: path
      required: true
      type: string
  /warehouses/employee_tasks/{id}/:
    get:
      operationId: warehouses_employee_tasks_read
      description: API endpoint to list all tasks for a specific employee.
      parameters: []
      responses:
        '200':
          description: ''
      tags:
      - warehouses
    parameters:
    - name: id
      in: path
      required: true
      type: string
  /warehouses/employees/:
    get:
      operationId: warehouses_employees_list
      description: |-
        ViewSet for managing warehouse employees.
        Provides CRUD operations for Employee objects.
      parameters: []
      responses:
        '200':
          description: ''
          schema:
            type: array
            items:
              $ref: '#/definitions/Employee'
      tags:
      - warehouses
    post:
      operationId: warehouses_employees_create
      description: |-
        ViewSet for managing warehouse employees.
        Provides CRUD operations for Employee objects.
      parameters:
      - name: data
        in: body
        required: true
        schema:
          $ref: '#/definitions/Employee'
      responses:
        '201':
          description: ''
          schema:
            $ref: '#/definitions/Employee'
      tags:
      - warehouses
    parameters: []
  /warehouses/employees/{id}/:
    get:
      operationId: warehouses_employees_read
      description: |-
        ViewSet for managing warehouse employees.
        Provides CRUD operations for Employee objects.
      parameters: []
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/Employee'
      tags:
      - warehouses
    put:
      operationId: warehouses_employees_update
      description: |-
        ViewSet for managing warehouse employees.
        Provides CRUD operations for Employee objects.
      parameters:
      - name: data
        in: body
        required: true
        schema:
          $ref: '#/definitions/Employee'
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/Employee'
      tags:
      - warehouses
    patch:
      operationId: warehouses_employees_partial_update
      description: |-
        ViewSet for managing warehouse employees.
        Provides CRUD operations for Employee objects.
      parameters:
      - name: data
        in: body
        required: true
        schema:
          $ref: '#/definitions/Employee'
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/Employee'
      tags:
      - warehouses
    delete:
      operationId: warehouses_employees_delete
      description: |-
        ViewSet for managing warehouse employees.
        Provides CRUD operations for Employee objects.
      parameters: []
      responses:
        '204':
          description: ''
      tags:
      - warehouses
    parameters:
    - name: id
      in: path
      description: A unique integer value identifying this employee.
      required: true
      type: integer
  /warehouses/inventory/add/{warehouse_name}/:
    post:
      operationId: warehouses_inventory_add_create
      description: دریافت یک لیست از محصولات و تعداد آنها و افزودن به انبار مشخص.
      parameters: []
      responses:
        '201':
          description: ''
      tags:
      - warehouses
    parameters:
    - name: warehouse_name
      in: path
      required: true
      type: string
  /warehouses/inventory/delete/{warehouse_name}/{product_id}/:
    delete:
      operationId: warehouses_inventory_delete_delete
      description: حذف یک محصول از انبار مشخص.
      parameters: []
      responses:
        '204':
          description: ''
      tags:
      - warehouses
    parameters:
    - name: warehouse_name
      in: path
      required: true
      type: string
    - name: product_id
      in: path
      required: true
      type: string
  /warehouses/inventory/transmit/{origin_warehouse_name}/{destination_warehouse_name}/:
    post:
      operationId: warehouses_inventory_transmit_create
      description: API endpoint to transmit a product between warehouses.
      parameters: []
      responses:
        '201':
          description: ''
      tags:
      - warehouses
    parameters:
    - name: origin_warehouse_name
      in: path
      required: true
      type: string
    - name: destination_warehouse_name
      in: path
      required: true
      type: string
  /warehouses/inventory/update/{warehouse_name}/:
    put:
      operationId: warehouses_inventory_update_update
      description: بروز رسانی موجودی محصولات در انبار مشخص.
      parameters: []
      responses:
        '200':
          description: ''
      tags:
      - warehouses
    parameters:
    - name: warehouse_name
      in: path
      required: true
      type: string
  /warehouses/purchase-orders/:
    get:
      operationId: warehouses_purchase-orders_list
      description: لیست سفارش‌ها با امکان فیلتر بر اساس تامین‌کننده و انبار
      parameters: []
      responses:
        '200':
          description: ''
          schema:
            type: array
            items:
              $ref: '#/definitions/PurchaseOrderList'
      tags:
      - warehouses
    post:
      operationId: warehouses_purchase-orders_create
      description: |-
        ViewSet for managing purchase orders.
        Provides CRUD operations for PurchaseOrderFromSupplier objects.
      parameters:
      - name: data
        in: body
        required: true
        schema:
          $ref: '#/definitions/PurchaseOrderList'
      responses:
        '201':
          description: ''
          schema:
            $ref: '#/definitions/PurchaseOrderList'
      tags:
      - warehouses
    parameters: []
  /warehouses/purchase-orders/items/{order_id}/{detail_id}/:
    post:
      operationId: warehouses_purchase-orders_items_create
      description: API endpoint for creating and deleting purchase orders from suppliers.
      parameters: []
      responses:
        '201':
          description: ''
      tags:
      - warehouses
    put:
      operationId: warehouses_purchase-orders_items_update
      description: API endpoint for creating and deleting purchase orders from suppliers.
      parameters: []
      responses:
        '200':
          description: ''
      tags:
      - warehouses
    delete:
      operationId: warehouses_purchase-orders_items_delete
      description: API endpoint for creating and deleting purchase orders from suppliers.
      parameters: []
      responses:
        '204':
          description: ''
      tags:
      - warehouses
    parameters:
    - name: order_id
      in: path
      required: true
      type: string
    - name: detail_id
      in: path
      required: true
      type: string
  /warehouses/purchase-orders/{id}/:
    get:
      operationId: warehouses_purchase-orders_read
      description: دریافت جزئیات یک سفارش بر اساس ID
      parameters: []
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/PurchaseOrderList'
        '404':
          description: Order not found
      tags:
      - warehouses
    put:
      operationId: warehouses_purchase-orders_update
      description: |-
        ViewSet for managing purchase orders.
        Provides CRUD operations for PurchaseOrderFromSupplier objects.
      parameters:
      - name: data
        in: body
        required: true
        schema:
          $ref: '#/definitions/PurchaseOrderList'
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/PurchaseOrderList'
      tags:
      - warehouses
    patch:
      operationId: warehouses_purchase-orders_partial_update
      description: |-
        ViewSet for managing purchase orders.
        Provides CRUD operations for PurchaseOrderFromSupplier objects.
      parameters:
      - name: data
        in: body
        required: true
        schema:
          $ref: '#/definitions/PurchaseOrderList'
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/PurchaseOrderList'
      tags:
      - warehouses
    delete:
      operationId: warehouses_purchase-orders_delete
      description: لغو یک سفارش بر اساس ID
      parameters: []
      responses:
        '204':
          description: Order successfully cancelled
        '404':
          description: Order not found
      tags:
      - warehouses
    parameters:
    - name: id
      in: path
      description: A unique integer value identifying this purchase order from supplier.
      required: true
      type: integer
  /warehouses/purchase-orders/{order_id}/:
    post:
      operationId: warehouses_purchase-orders_create
      description: API endpoint for creating and deleting purchase orders from suppliers.
      parameters: []
      responses:
        '201':
          description: ''
      tags:
      - warehouses
    put:
      operationId: warehouses_purchase-orders_update
      description: API endpoint for creating and deleting purchase orders from suppliers.
      parameters: []
      responses:
        '200':
          description: ''
      tags:
      - warehouses
    delete:
      operationId: warehouses_purchase-orders_delete
      description: API endpoint for creating and deleting purchase orders from suppliers.
      parameters: []
      responses:
        '204':
          description: ''
      tags:
      - warehouses
    parameters:
    - name: order_id
      in: path
      required: true
      type: string
  /warehouses/task_for_employees/:
    get:
      operationId: warehouses_task_for_employees_list
      description: |-
        ViewSet for managing tasks assigned to employees.
        Provides CRUD operations for TaskForEmployee objects.
      parameters: []
      responses:
        '200':
          description: ''
          schema:
            type: array
            items:
              $ref: '#/definitions/TaskForEmployee'
      tags:
      - warehouses
    post:
      operationId: warehouses_task_for_employees_create
      description: |-
        ViewSet for managing tasks assigned to employees.
        Provides CRUD operations for TaskForEmployee objects.
      parameters:
      - name: data
        in: body
        required: true
        schema:
          $ref: '#/definitions/TaskForEmployee'
      responses:
        '201':
          description: ''
          schema:
            $ref: '#/definitions/TaskForEmployee'
      tags:
      - warehouses
    parameters: []
  /warehouses/task_for_employees/{id}/:
    get:
      operationId: warehouses_task_for_employees_read
      description: |-
        ViewSet for managing tasks assigned to employees.
        Provides CRUD operations for TaskForEmployee objects.
      parameters: []
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/TaskForEmployee'
      tags:
      - warehouses
    put:
      operationId: warehouses_task_for_employees_update
      description: |-
        ViewSet for managing tasks assigned to employees.
        Provides CRUD operations for TaskForEmployee objects.
      parameters:
      - name: data
        in: body
        required: true
        schema:
          $ref: '#/definitions/TaskForEmployee'
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/TaskForEmployee'
      tags:
      - warehouses
    patch:
      operationId: warehouses_task_for_employees_partial_update
      description: |-
        ViewSet for managing tasks assigned to employees.
        Provides CRUD operations for TaskForEmployee objects.
      parameters:
      - name: data
        in: body
        required: true
        schema:
          $ref: '#/definitions/TaskForEmployee'
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/TaskForEmployee'
      tags:
      - warehouses
    delete:
      operationId: warehouses_task_for_employees_delete
      description: |-
        ViewSet for managing tasks assigned to employees.
        Provides CRUD operations for TaskForEmployee objects.
      parameters: []
      responses:
        '204':
          description: ''
      tags:
      - warehouses
    parameters:
    - name: id
      in: path
      description: A unique integer value identifying this task for employee.
      required: true
      type: integer
  /warehouses/tasks/:
    get:
      operationId: warehouses_tasks_list
      description: |-
        ViewSet for managing warehouse tasks.
        Provides CRUD operations for Task objects.
      parameters: []
      responses:
        '200':
          description: ''
          schema:
            type: array
            items:
              $ref: '#/definitions/Task'
      tags:
      - warehouses
    post:
      operationId: warehouses_tasks_create
      description: |-
        ViewSet for managing warehouse tasks.
        Provides CRUD operations for Task objects.
      parameters:
      - name: data
        in: body
        required: true
        schema:
          $ref: '#/definitions/Task'
      responses:
        '201':
          description: ''
          schema:
            $ref: '#/definitions/Task'
      tags:
      - warehouses
    parameters: []
  /warehouses/tasks/{id}/:
    get:
      operationId: warehouses_tasks_read
      description: |-
        ViewSet for managing warehouse tasks.
        Provides CRUD operations for Task objects.
      parameters: []
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/Task'
      tags:
      - warehouses
    put:
      operationId: warehouses_tasks_update
      description: |-
        ViewSet for managing warehouse tasks.
        Provides CRUD operations for Task objects.
      parameters:
      - name: data
        in: body
        required: true
        schema:
          $ref: '#/definitions/Task'
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/Task'
      tags:
      - warehouses
    patch:
      operationId: warehouses_tasks_partial_update
      description: |-
        ViewSet for managing warehouse tasks.
        Provides CRUD operations for Task objects.
      parameters:
      - name: data
        in: body
        required: true
        schema:
          $ref: '#/definitions/Task'
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/Task'
      tags:
      - warehouses
    delete:
      operationId: warehouses_tasks_delete
      description: |-
        ViewSet for managing warehouse tasks.
        Provides CRUD operations for Task objects.
      parameters: []
      responses:
        '204':
          description: ''
      tags:
      - warehouses
    parameters:
    - name: id
      in: path
      description: A unique integer value identifying this task.
      required: true
      type: integer
  /warehouses/warehouse_employees/{id}/:
    get:
      operationId: warehouses_warehouse_employees_read
      description: API endpoint to list all employees in a warehouse.
      parameters: []
      responses:
        '200':
          description: ''
      tags:
      - warehouses
    parameters:
    - name: id
      in: path
      required: true
      type: string
  /warehouses/warehouses/:
    get:
      operationId: warehouses_warehouses_list
      description: |-
        ViewSet for managing warehouses.
        Provides CRUD operations for Warehouse objects.
      parameters: []
      responses:
        '200':
          description: ''
          schema:
            type: array
            items:
              $ref: '#/definitions/Warehouse'
      tags:
      - warehouses
    post:
      operationId: warehouses_warehouses_create
      description: |-
        ViewSet for managing warehouses.
        Provides CRUD operations for Warehouse objects.
      parameters:
      - name: data
        in: body
        required: true
        schema:
          $ref: '#/definitions/Warehouse'
      responses:
        '201':
          description: ''
          schema:
            $ref: '#/definitions/Warehouse'
      tags:
      - warehouses
    parameters: []
  /warehouses/warehouses/{name}/:
    get:
      operationId: warehouses_warehouses_read
      description: |-
        ViewSet for managing warehouses.
        Provides CRUD operations for Warehouse objects.
      parameters: []
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/Warehouse'
      tags:
      - warehouses
    put:
      operationId: warehouses_warehouses_update
      description: |-
        ViewSet for managing warehouses.
        Provides CRUD operations for Warehouse objects.
      parameters:
      - name: data
        in: body
        required: true
        schema:
          $ref: '#/definitions/Warehouse'
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/Warehouse'
      tags:
      - warehouses
    patch:
      operationId: warehouses_warehouses_partial_update
      description: |-
        ViewSet for managing warehouses.
        Provides CRUD operations for Warehouse objects.
      parameters:
      - name: data
        in: body
        required: true
        schema:
          $ref: '#/definitions/Warehouse'
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/Warehouse'
      tags:
      - warehouses
    delete:
      operationId: warehouses_warehouses_delete
      description: |-
        ViewSet for managing warehouses.
        Provides CRUD operations for Warehouse objects.
      parameters: []
      responses:
        '204':
          description: ''
      tags:
      - warehouses
    parameters:
    - name: name
      in: path
      description: A unique value identifying this warehouse.
      required: true
      type: string
definitions:
  Address:
    type: object
    properties:
      province:
        title: Province
        type: string
        maxLength: 50
        x-nullable: true
      city:
        title: City
        type: string
        maxLength: 50
        x-nullable: true
      street:
        title: Street
        type: string
        maxLength: 50
        x-nullable: true
      alley:
        title: Alley
        type: string
        maxLength: 50
        x-nullable: true
      house_number:
        title: House number
        type: string
        maxLength: 50
        x-nullable: true
  Profile:
    required:
    - first_name
    - last_name
    type: object
    properties:
      id:
        title: ID
        type: integer
        readOnly: true
      first_name:
        title: First name
        type: string
        maxLength: 50
        minLength: 1
      last_name:
        title: Last name
        type: string
        maxLength: 50
        minLength: 1
      image:
        title: Image
        type: string
        readOnly: true
        x-nullable: true
        format: uri
      bio:
        title: Bio
        type: string
        x-nullable: true
  UserProfile:
    required:
    - phone_number
    - profile
    type: object
    properties:
      id:
        title: ID
        type: integer
        readOnly: true
      email:
        title: Email
        type: string
        format: email
        readOnly: true
        minLength: 1
      phone_number:
        title: Phone Number
        type: string
        maxLength: 11
        minLength: 1
      is_active:
        title: Active
        type: boolean
        readOnly: true
      profile:
        $ref: '#/definitions/Profile'
      create_date:
        title: Date Created
        type: string
        format: date-time
        readOnly: true
      update_date:
        title: Date Updated
        type: string
        format: date-time
        readOnly: true
  Login:
    required:
    - email
    - password
    type: object
    properties:
      email:
        title: Email
        type: string
        format: email
        minLength: 1
      password:
        title: Password
        type: string
        minLength: 1
  Register:
    required:
    - email
    - password
    - confirm_password
    - phone_number
    type: object
    properties:
      email:
        title: Email
        type: string
        format: email
        maxLength: 254
        minLength: 1
      password:
        title: Password
        type: string
        maxLength: 128
        minLength: 1
      confirm_password:
        title: Confirm password
        type: string
        minLength: 1
      phone_number:
        title: Phone Number
        type: string
        maxLength: 11
        minLength: 1
  Category:
    type: object
    properties: {}
  Color:
    required:
    - name
    type: object
    properties:
      name:
        title: Name
        type: string
        maxLength: 100
        minLength: 1
  Comment:
    required:
    - product
    - user
    - title
    - text
    type: object
    properties:
      id:
        title: ID
        type: integer
        readOnly: true
      product:
        title: Product
        type: string
      user:
        title: User
        type: integer
      title:
        title: Title
        type: string
        maxLength: 100
        minLength: 1
      text:
        title: Text
        type: string
        minLength: 1
      created_date:
        title: Created date
        type: string
        format: date-time
        readOnly: true
  Product:
    required:
    - name
    - categories
    type: object
    properties:
      name:
        title: Name
        type: string
        maxLength: 100
        minLength: 1
      description:
        title: Description
        type: string
        x-nullable: true
      categories:
        type: array
        items:
          $ref: '#/definitions/Category'
      create_date:
        title: Create date
        type: string
        format: date-time
        readOnly: true
  Size:
    required:
    - name
    type: object
    properties:
      name:
        title: Name
        type: string
        maxLength: 100
        minLength: 1
  CategorySupplier:
    required:
    - name
    type: object
    properties:
      name:
        title: Name
        type: string
        maxLength: 255
        minLength: 1
  ColorSupplier:
    required:
    - name
    type: object
    properties:
      name:
        title: Name
        type: string
        maxLength: 100
        minLength: 1
  InventorySupplier:
    required:
    - supplier
    - product
    - stock
    - price
    type: object
    properties:
      id:
        title: ID
        type: integer
        readOnly: true
      supplier:
        title: Supplier
        type: string
        minLength: 1
      product:
        title: Product
        type: string
      stock:
        title: Stock
        type: integer
        maximum: 2147483647
        minimum: -2147483648
      colors:
        title: Colors
        type: string
      sizes:
        title: Sizes
        type: string
      weight:
        title: Weight
        type: string
        format: decimal
        x-nullable: true
      price:
        title: Price
        type: integer
        maximum: 2147483647
        minimum: -2147483648
  ProductDetailSupplier:
    required:
    - name
    - description
    - categories
    type: object
    properties:
      name:
        title: Name
        type: string
        maxLength: 100
        minLength: 1
      description:
        title: Description
        type: string
        minLength: 1
      categories:
        type: array
        items:
          $ref: '#/definitions/CategorySupplier'
      created_date:
        title: Created date
        type: string
        format: date-time
        readOnly: true
  SizeSupplier:
    required:
    - name
    type: object
    properties:
      name:
        title: Name
        type: string
        maxLength: 100
        minLength: 1
  Supplier:
    required:
    - name
    - phone_number
    - address
    type: object
    properties:
      name:
        title: Name
        type: string
        maxLength: 100
        minLength: 1
      phone_number:
        title: Phone number
        type: string
        maxLength: 100
        minLength: 1
      address:
        title: Address
        type: string
        maxLength: 100
        minLength: 1
      is_active:
        title: Is active
        type: boolean
  Employee:
    required:
    - warehouse
    - name
    - last_name
    - phone_number
    - national_code
    type: object
    properties:
      warehouse:
        title: Warehouse
        type: string
      tasks:
        type: array
        items:
          type: integer
        readOnly: true
        uniqueItems: true
      manager:
        title: Manager
        type: integer
        x-nullable: true
      name:
        title: Name
        type: string
        maxLength: 100
        minLength: 1
      last_name:
        title: Last name
        type: string
        maxLength: 100
        minLength: 1
      phone_number:
        title: Phone number
        type: string
        maxLength: 100
        minLength: 1
      national_code:
        title: National code
        type: string
        maxLength: 100
        minLength: 1
      image:
        title: Image
        type: string
        readOnly: true
        format: uri
  PurchaseOrderList:
    required:
    - expected_delivery_date
    type: object
    properties:
      id:
        title: ID
        type: integer
        readOnly: true
      supplier:
        title: Supplier
        type: string
        readOnly: true
        minLength: 1
      warehouse:
        title: Warehouse
        type: string
        readOnly: true
        minLength: 1
      order_date:
        title: Order date
        type: string
        format: date
        readOnly: true
      expected_delivery_date:
        title: Expected delivery date
        type: string
        format: date
      total_price_order:
        title: Total price order
        type: string
        format: decimal
        readOnly: true
      is_applied_to_warehouse:
        title: Is applied to warehouse
        type: boolean
        readOnly: true
  TaskForEmployee:
    required:
    - employee
    - task
    type: object
    properties:
      employee:
        title: Employee
        type: integer
      task:
        title: Task
        type: integer
      was_delivered_at:
        title: Was delivered at
        type: string
        format: date-time
        readOnly: true
      is_done:
        title: Is done
        type: boolean
  Task:
    required:
    - title
    type: object
    properties:
      title:
        title: Title
        type: string
        maxLength: 100
        minLength: 1
      description:
        title: Description
        type: string
        x-nullable: true
  Warehouse:
    required:
    - name
    - address
    type: object
    properties:
      name:
        title: Name
        type: string
        maxLength: 100
        minLength: 1
      address:
        title: Address
        type: string
        maxLength: 100
        minLength: 1
      stablished_date:
        title: Stablished date
        type: string
        format: date
        readOnly: true
      is_full:
        title: Is full
        type: boolean
      slug:
        title: Slug
        type: string
        format: slug
        pattern: ^[-a-zA-Z0-9_]+$
        readOnly: true
        minLength: 1
        x-nullable: true
